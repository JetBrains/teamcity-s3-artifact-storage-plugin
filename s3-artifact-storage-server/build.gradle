/*
 * Copyright 2000-2022 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.github.rodm.teamcity-server' version "1.1.1"
    id 'com.github.jk1.tcdeps' version '1.3.1'
}

teamcity {
    version = teamcityVersion
    server {
        descriptor = project.file('teamcity-plugin.xml')
        tokens = [Version: project.version]

        files {
          into("kotlin-dsl") {
            from("kotlin-dsl")
          }
        }
    }
}

if(shouldIncludeMigrationTool) {
    repositories {
        teamcityServer {
            url = "https://buildserver.labs.intellij.net/"
            credentials {
                username = teamcity_username
                password = (project.hasProperty("teamcity_password") ? teamcity_password : teamcity_token)
            }
        }
    }
}

configurations {
    artifactMigrationTool
}

dependencies {
    compile project(':s3-artifact-storage-common')
    provided(group: 'org.jetbrains.teamcity.internal', name: 'server', version: "${teamcityVersion}") {
      exclude group: 'org.apache.httpcomponents', module: 'httpclient'
      exclude group: 'org.apache.httpcomponents', module: 'httpcore'
      exclude group: 'commons-codec', module: 'commons-codec'
    }

    compile "org.bouncycastle:bcprov-jdk15on:1.69"

    testImplementation "org.testcontainers:localstack:1.15.2"

    agent project(path: ':s3-artifact-storage-agent', configuration: 'plugin')
    server group: 'commons-codec', name: 'commons-codec', version: "1.11"

    if(shouldIncludeMigrationTool){
        artifactMigrationTool tc(buildTypeId: 'TC_TeamCityTools_TeamCityArtifactsMigrationTool', version: migrationToolVersion, artifactPath: "teamcity-artifacts-migration-tool.zip")
    }
}

serverPlugin.version = null
serverPlugin.baseName = projectIds.artifact

tasks.withType(JavaCompile) {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"

    if (project.hasProperty('JDK_18')) {
        options.bootstrapClasspath = layout.files("$JDK_18/jre/lib/rt.jar")
    }
}

task prepareArtifactMigrationTool(type: Sync) {
    from { configurations.artifactMigrationTool.singleFile }
    into "build/resources/main/buildServerResources/migration-tool/"
    rename { "artifacts-migration-tool.zip" }
}

if(shouldIncludeMigrationTool){
    processResources.finalizedBy(prepareArtifactMigrationTool)
}

